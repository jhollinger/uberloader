#!/usr/bin/env bash

set -euo pipefail

cd $(dirname $0)/../
source bin/lib.sh

if [[ $# -ne 0 ]]; then
  >&2 echo "usage: $(basename $0)"
  exit 1
fi

readonly dockerfile_base=compose/Dockerfile.ruby-3.3
readonly appraised_ar_versions=($(awk '$1 == "appraise" { gsub("\"", "", $2); print $2 }' < Appraisals | sed 's/^ar-//'))
readonly all_ar_versions=$(gem_versions activerecord)
readonly uberloader_versions=$(gem_versions uberloader)

function main {
  [[ -d $COMPAT_RESULTS_DIR ]] || mkdir -p $COMPAT_RESULTS_DIR

  for appraised_version in ${appraised_ar_versions[@]}; do
    build_gem_image $appraised_version
  done

  for ar_version in ${all_ar_versions[@]}; do
    for appraised_version in ${appraised_ar_versions[@]}; do
      if [[ $ar_version == "${appraised_version}."* ]]; then
        for ul_version in ${uberloader_versions[@]}; do
          test_versions $appraised_version $ar_version $ul_version
        done
      fi
    done
  done
}

function test_versions {
  appraised_version=$1
  ar_version=$2
  ul_version=$3
  result_file=${COMPAT_RESULTS_DIR}/${ar_version}-${ul_version}

  if [[ ! -f $result_file ]]; then
    if bin/test-compatibility $appraised_version $ar_version $ul_version; then
      printf "Pass" > $result_file
    else
      printf "Fail" > $result_file
    fi
  fi
}

function build_gem_image {
  appraised_version=$1
  dockerfile=${COMPAT_CACHE_DIR}/Dockerfile.${appraised_version}
  cat <(
    cat $dockerfile_base
    echo "COPY Gemfile Appraisals *.gemspec /srv/"
    echo "COPY gemfiles /srv/gemfiles"
    echo "COPY lib/uberloader/version.rb /srv/lib/uberloader/version.rb"
    echo "RUN bundle install && bundle exec appraisal ar-${appraised_version} bundle install"
    echo "COPY Rakefile /srv/Rakefile"
    echo "COPY test /srv/test"
  ) > $dockerfile
  docker build -f $dockerfile -t $(compat_image_name $appraised_version) .
}

main
